events {}

http {
    upstream ecommerce_cluster {
        server app:8080;
    }

    # Shared memory zone (10MB) to track concurrent connections per IP
    limit_conn_zone $binary_remote_addr zone=addr:10m;

    # Shared memory zone (10MB) to track request rate per IP (10 requests per second)
    limit_req_zone $binary_remote_addr zone=req_limit_per_ip:10m rate=10r/s;


    server {
        listen 80;
        server_name _;

        location / {
            # Limit concurrent connections per IP (max 10 active connections)
            limit_conn addr 10;

            # Limit request rate per IP (max 10 requests per second)
            # Allow short bursts of up to 20 requests with no delay
            limit_req zone=req_limit_per_ip burst=20 nodelay;

            # Proxy requests to the Spring Boot upstream cluster
            proxy_pass http://ecommerce_cluster;

            # forward the real client information
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Timeouts to prevent slow clients from holding resources
            proxy_connect_timeout 3s;
            proxy_read_timeout 30s;
            proxy_send_timeout 30s;
        }

        # Custom error page for rate-limit violations
        error_page 503 /too_many_requests.html;

        location = /too_many_requests.html {

            return 429 "Too many requests. Please try again later.\n";
        }

        # basic security & logging
        access_log /var/log/nginx/access.log;
        error_log /var/log/nginx/error.log warn;
        client_max_body_size 10M;
    }
}
